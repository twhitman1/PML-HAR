knitr::opts_chunk$set(echo = TRUE)
# load relevant packages and set seed
library(caret)
library(dplyr)
library(AppliedPredictiveModeling)
set.seed(512)
# obtain data
trainURL <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
testURL <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"
pmlTrain <- read.csv(trainURL, na.strings=c("NA","#DIV/0!",""))
pmlTest <- read.csv(testURL, na.strings=c("NA","#DIV/0!",""))
rm("trainURL"); rm("testURL")
dim(pmlTrain)
summary(pmlTrain$new_window)
summary(pmlTrain$classe)
#filter and rows and columns based on profiling
pmlTrain2 <- filter(pmlTrain, new_window == 'no')
pmlTrain2 <- pmlTrain2[, !names(pmlTrain2) %in% c('X', 'user_name', 'raw_timestamp_part_1', 'raw_timestamp_part_2', 'cvtd_timestamp', 'new_window')]
#remove columns which have only NA values
pmlTrain2 <- pmlTrain2 %>% select_if(colSums(!is.na(.)) > 0)
dim(pmlTrain2)
inTrain <- createDataPartition(y=pmlTrain2$classe, p=0.75, list=FALSE)
mytrain <- pmlTrain2[inTrain,]
mytest <- pmlTrain2[-inTrain,]
fitCntrl <- trainControl(method="repeatedcv", number = 5, repeats = 4)
modelfit <- train(classe~.,data=mytrain,method="rf",trcontrol= fitCntrl)
pred <- predict(modelfit, mytest)
confusionMatrix(mytest$classe, pred)
LiveTestPrediction <- predict(modelfit, newdata = pmlTest)
LiveTestPrediction
getwd()
file.exists("~/.ssh/id_rsa.pub")
